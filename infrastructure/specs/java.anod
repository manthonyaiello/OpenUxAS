from e3.anod.error import AnodError
from e3.anod.loader import spec
from e3.anod.spec import Anod
import os


class Java(spec('common')):
    """Install latest OpenJDK."""

    def setenv(self):
        if self.env.build.os.name == 'darwin':
            self.env.add_path(os.path.join(self.build_space.src_dir,
                                           'Contents', 'Home', 'bin'))
        else:
            self.env.add_path(os.path.join(self.build_space.src_dir, 'bin'))

    @property
    def build_source_list(self):
        if self.env.build.os.name == 'darwin':
            return [Anod.Source(name='openjdk-13.0.2_osx-x64_bin.tar.gz',
                                publish=False)]
        elif self.env.build.os.name == 'linux':
            return [Anod.Source(name='openjdk-13.0.2_linux-x64_bin.tar.gz',
                                publish=False)]
        else:
            raise AnodError("platform %s not supported"
                            % self.env.build.os.name)

    @property
    def source_pkg_build(self):
        return [
            self.HTTPSSourceBuilder(
                name='openjdk-13.0.2_linux-x64_bin.tar.gz',
                url='https://download.java.net/java/GA/jdk13.0.2/'
                'd4173c853231432d94f001e99d882ca7/8/GPL/'
                'openjdk-13.0.2_linux-x64_bin.tar.gz'),
            self.HTTPSSourceBuilder(
                name='openjdk-13.0.2_osx-x64_bin.tar.gz',
                url='https://download.java.net/java/GA/jdk13.0.2/'
                'd4173c853231432d94f001e99d882ca7/8/GPL/'
                'openjdk-13.0.2_osx-x64_bin.tar.gz')]

    @Anod.primitive()
    def build(self):
        pass
